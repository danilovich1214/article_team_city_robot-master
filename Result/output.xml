<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180203 11:27:36.090" generator="Rebot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/ITRANSITION.CORP/e.danilovich/GitHub/article_team_city_robot-master/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Auth Request Positive">
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and ${VALID_NAME}, ${VALID_PASSWORD} and check ${STATUS_OK}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:32.816" level="INFO">${st_code} = 200</msg>
<status status="PASS" endtime="20180203 11:27:32.816" starttime="20180203 11:27:32.493"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:32.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:32.818" starttime="20180203 11:27:32.817"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:32.818" starttime="20180203 11:27:32.492"></status>
</kw>
<kw name="Login with us@43!_er, ${VALID_PASSWORD} and us@43!_er, ${VALID_PASSWORD} and check ${STATUS_OK}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:33.122" level="INFO">${st_code} = 200</msg>
<status status="PASS" endtime="20180203 11:27:33.122" starttime="20180203 11:27:32.820"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:33.124" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:33.124" starttime="20180203 11:27:33.123"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:33.124" starttime="20180203 11:27:32.819"></status>
</kw>
<kw name="Login with us@43!_er, pas@!_s and us@43!_er, pas@!_s and check ${STATUS_OK}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:33.428" level="INFO">${st_code} = 200</msg>
<status status="PASS" endtime="20180203 11:27:33.428" starttime="20180203 11:27:33.126"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:33.430" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:33.430" starttime="20180203 11:27:33.429"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:33.430" starttime="20180203 11:27:33.125"></status>
</kw>
<doc>Check status_code from request after login attempt
with credentials specified in Template's tags</doc>
<status status="PASS" endtime="20180203 11:27:33.431" critical="yes" starttime="20180203 11:27:32.492"></status>
</test>
<test id="s1-t2" name="Auth Request Negative">
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and nameInvalid, passInvalid and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:33.723" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:33.724" starttime="20180203 11:27:33.435"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:33.725" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:33.725" starttime="20180203 11:27:33.724"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:33.726" starttime="20180203 11:27:33.433"></status>
</kw>
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and ${VALID_NAME}, passInvalid and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:34.023" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:34.023" starttime="20180203 11:27:33.728"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:34.025" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:34.025" starttime="20180203 11:27:34.024"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:34.025" starttime="20180203 11:27:33.726"></status>
</kw>
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and nameInvalid, ${VALID_PASSWORD} and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:34.316" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:34.317" starttime="20180203 11:27:34.027"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:34.318" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:34.318" starttime="20180203 11:27:34.317"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:34.319" starttime="20180203 11:27:34.026"></status>
</kw>
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and ${VALID_NAME}, ${EMPTY} and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:34.613" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:34.613" starttime="20180203 11:27:34.321"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:34.614" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:34.615" starttime="20180203 11:27:34.614"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:34.615" starttime="20180203 11:27:34.319"></status>
</kw>
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and nameInvalid, ${EMPTY} and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:34.905" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:34.906" starttime="20180203 11:27:34.616"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:34.907" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:34.907" starttime="20180203 11:27:34.906"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:34.908" starttime="20180203 11:27:34.616"></status>
</kw>
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and ${EMPTY}, ${VALID_PASSWORD} and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:35.198" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:35.198" starttime="20180203 11:27:34.908"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:35.200" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:35.200" starttime="20180203 11:27:35.199"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:35.200" starttime="20180203 11:27:34.908"></status>
</kw>
<kw name="Login with ${VALID_NAME}, ${VALID_PASSWORD} and ${EMPTY}, passInvalid and check ${STATUS_UNAUTHORIZED}">
<doc>Check status_code from request after login attempt</doc>
<kw name="Call Basic Auth" library="demo_rest.DemoREST">
<doc>Get status_code from request after login attempt</doc>
<arguments>
<arg>${base_name}</arg>
<arg>${base_password}</arg>
<arg>${check_name}</arg>
<arg>${check_password}</arg>
</arguments>
<assign>
<var>${st_code}</var>
</assign>
<msg timestamp="20180203 11:27:35.501" level="INFO">${st_code} = 401</msg>
<status status="PASS" endtime="20180203 11:27:35.501" starttime="20180203 11:27:35.202"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${st_code}</arg>
<arg>${status_code}</arg>
</arguments>
<msg timestamp="20180203 11:27:35.502" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:35.503" starttime="20180203 11:27:35.501"></status>
</kw>
<status status="PASS" endtime="20180203 11:27:35.503" starttime="20180203 11:27:35.201"></status>
</kw>
<doc>Check status_code from request after login attempt
with credentials specified in Template's tags</doc>
<status status="PASS" endtime="20180203 11:27:35.503" critical="yes" starttime="20180203 11:27:33.432"></status>
</test>
<test id="s1-t3" name="Count Responce Lines">
<kw name="Call Steam" library="demo_rest.DemoREST">
<doc>Get status_code and content from request with specified</doc>
<arguments>
<arg>${number_of_lines}</arg>
</arguments>
<assign>
<var>${status_code}</var>
<var>${json}</var>
</assign>
<msg timestamp="20180203 11:27:35.795" level="INFO">${status_code} = 200</msg>
<msg timestamp="20180203 11:27:35.795" level="INFO">${json} = {"args": {}, "headers": {"Host": "httpbin.org", "Accept-Encoding": "gzip, deflate", "User-Agent": "python-requests/2.18.4", "Accept": "*/*", "Connection": "close"}, "origin": "86.57.158.98", "id": 0, ...</msg>
<status status="PASS" endtime="20180203 11:27:35.795" starttime="20180203 11:27:35.506"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${json}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20180203 11:27:35.797" level="INFO">2 lines</msg>
<msg timestamp="20180203 11:27:35.797" level="INFO">${result} = 2</msg>
<status status="PASS" endtime="20180203 11:27:35.797" starttime="20180203 11:27:35.796"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>${STATUS_OK}</arg>
</arguments>
<msg timestamp="20180203 11:27:35.798" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20180203 11:27:35.799" starttime="20180203 11:27:35.797"></status>
</kw>
<doc>Check number of lines in stream response is the same to a given one</doc>
<status status="PASS" endtime="20180203 11:27:35.799" critical="yes" starttime="20180203 11:27:35.504"></status>
</test>
<doc>Test demo REST service</doc>
<status status="PASS" endtime="20180203 11:27:35.801" starttime="20180203 11:27:32.474"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="3">Tests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20180203 11:27:32.473" level="ERROR">Taking listener 'demo_rest.py' into use failed: Listener '/home/ITRANSITION.CORP/e.danilovich/GitHub/article_team_city_robot-master/demo_rest.py' does not have mandatory 'ROBOT_LISTENER_API_VERSION' attribute.</msg>
</errors>
</robot>
